@startuml

title __PETRINET's Class Diagram__\n

  namespace org.pneditor.petrinet {
    abstract class org.pneditor.petrinet.AbstractArc {
        {abstract} + getDestination()
        {abstract} + getMultiplicity()
        {abstract} + getSource()
        {abstract} + isInhibitory()
        {abstract} + isRegular()
        {abstract} + isReset()
        + isSourceAPlace()
        {abstract} + setMultiplicity()
    }
  }
  

  namespace org.pneditor.petrinet {
    abstract class org.pneditor.petrinet.AbstractNode {
        - id : int
        - label : String
        + AbstractNode()
        + getId()
        + getLabel()
        {abstract} + isPlace()
        + setLabel()
        # setId()
    }
  }
  

  namespace org.pneditor.petrinet {
    abstract class org.pneditor.petrinet.AbstractPlace {
        + AbstractPlace()
        {abstract} + addToken()
        {abstract} + getTokens()
        + isPlace()
        {abstract} + removeToken()
        {abstract} + setTokens()
    }
  }
  

  namespace org.pneditor.petrinet {
    abstract class org.pneditor.petrinet.AbstractTransition {
        + AbstractTransition()
        + isPlace()
    }
  }
  

  namespace org.pneditor.petrinet {
    class org.pneditor.petrinet.Boundedness {
        - isUnboundedness : boolean
        - lock : ReentrantReadWriteLock
        - markingsStack : Stack<Map<AbstractPlace, Integer>>
        + Boundedness()
        + getAllEnabledTransitions()
        + isBounded()
        - checkBranchBoundedness()
        - fire()
        - initFill()
        - isEnabled()
        - isOmega()
    }
  }
  

  namespace org.pneditor.petrinet {
    abstract class org.pneditor.petrinet.PetriNetInterface {
        - arcs : Set<AbstractArc>
        - nextId : int
        - places : Set<AbstractPlace>
        - transitions : Set<AbstractTransition>
        + addAbstractPlace()
        + addAbstractPlace()
        + addAbstractTransition()
        + addAbstractTransition()
        + addArcAgain()
        + addInhibArc()
        {abstract} + addInhibitoryArc()
        {abstract} + addPlace()
        + addRegArc()
        {abstract} + addRegularArc()
        + addResArc()
        {abstract} + addResetArc()
        {abstract} + addTransition()
        + cloneArc()
        + clonePlace()
        + cloneTransition()
        {abstract} + fire()
        + getConnectedArcs()
        + getPlaces()
        + getTransitions()
        + isBounded()
        {abstract} + isEnabled()
        + removeAbstractArc()
        + removeAbstractPlace()
        + removeAbstractTransition()
        {abstract} + removeArc()
        {abstract} + removePlace()
        {abstract} + removeTransition()
    }
  }
  

  namespace org.pneditor.petrinet {
    class org.pneditor.petrinet.ResetArcMultiplicityException {
        + ResetArcMultiplicityException()
    }
  }
  

  namespace org.pneditor.petrinet {
    class org.pneditor.petrinet.UnimplementedCaseException {
        + UnimplementedCaseException()
    }
  }
  

  org.pneditor.petrinet.AbstractPlace -up-|> org.pneditor.petrinet.AbstractNode
  org.pneditor.petrinet.AbstractTransition -up-|> org.pneditor.petrinet.AbstractNode
  org.pneditor.petrinet.Boundedness o-- org.pneditor.petrinet.PetriNetInterface : petriNet


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
