@startuml

title __FILECHOOSER's Class Diagram__\n

  namespace org.pneditor.editor {
    namespace filechooser {
      class org.pneditor.editor.filechooser.EpsFileType {
          + getExtension()
          + getIcon()
          + getName()
          + getPreview()
          + load()
          + save()
      }
    }
  }
  

  namespace org.pneditor.editor {
    namespace filechooser {
      class org.pneditor.editor.filechooser.FileChooserDialog {
          + FileChooserDialog()
          + addChoosableFileFilter()
          + getSelectedFile()
          + getSidebar()
      }
    }
  }
  

  namespace org.pneditor.editor {
    namespace filechooser {
      class org.pneditor.editor.filechooser.FileIconView {
          + getIcon()
      }
    }
  }
  

  namespace org.pneditor.editor {
    namespace filechooser {
      abstract class org.pneditor.editor.filechooser.FileType {
          + accept()
          {static} + getAcceptingFileType()
          {static} + getAllFileTypes()
          + getDescription()
          {abstract} + getExtension()
          {abstract} + getIcon()
          {abstract} + getName()
          + getPreview()
          {abstract} + load()
          {abstract} + save()
      }
    }
  }
  

  namespace org.pneditor.editor {
    namespace filechooser {
      class org.pneditor.editor.filechooser.FileTypeException {
          + FileTypeException()
      }
    }
  }
  

  namespace org.pneditor.editor {
    namespace filechooser {
      class org.pneditor.editor.filechooser.PflowFileType {
          + getExtension()
          + getIcon()
          + getName()
          + load()
          + save()
      }
    }
  }
  

  namespace org.pneditor.editor {
    namespace filechooser {
      class org.pneditor.editor.filechooser.PngFileType {
          + getExtension()
          + getIcon()
          + getName()
          + getPreview()
          + load()
          + save()
      }
    }
  }
  

  namespace org.pneditor.editor {
    namespace filechooser {
      class org.pneditor.editor.filechooser.Preview {
          {static} + PREFERRED_HEIGHT : int
          {static} + PREFERRED_WIDTH : int
          - file : File
          {static} - serialVersionUID : long
          - thumbnail : ImageIcon
          + Preview()
          + propertyChange()
          # paintComponent()
          - loadImage()
      }
    }
  }
  

  namespace org.pneditor.editor {
    namespace filechooser {
      class org.pneditor.editor.filechooser.Sidebar {
          - delete : JButton
          - fileChooser : JFileChooser
          + Sidebar()
          + actionPerformed()
          + propertyChange()
      }
    }
  }
  

  namespace org.pneditor.editor {
    namespace filechooser {
      class org.pneditor.editor.filechooser.ViptoolPnmlFileType {
          + getExtension()
          + getIcon()
          + getName()
          + load()
          + save()
      }
    }
  }
  

  org.pneditor.editor.filechooser.EpsFileType -up-|> org.pneditor.editor.filechooser.FileType
  org.pneditor.editor.filechooser.FileChooserDialog -up-|> javax.swing.JFileChooser
  org.pneditor.editor.filechooser.FileChooserDialog o-- org.pneditor.editor.filechooser.Sidebar : sidebar
  org.pneditor.editor.filechooser.FileIconView -up-|> javax.swing.filechooser.FileView
  org.pneditor.editor.filechooser.FileType -up-|> javax.swing.filechooser.FileFilter
  org.pneditor.editor.filechooser.PflowFileType -up-|> org.pneditor.editor.filechooser.FileType
  org.pneditor.editor.filechooser.PngFileType -up-|> org.pneditor.editor.filechooser.FileType
  org.pneditor.editor.filechooser.Preview .up.|> java.beans.PropertyChangeListener
  org.pneditor.editor.filechooser.Preview -up-|> javax.swing.JPanel
  org.pneditor.editor.filechooser.Sidebar .up.|> java.awt.event.ActionListener
  org.pneditor.editor.filechooser.Sidebar .up.|> java.beans.PropertyChangeListener
  org.pneditor.editor.filechooser.Sidebar -up-|> javax.swing.JPanel
  org.pneditor.editor.filechooser.ViptoolPnmlFileType -up-|> org.pneditor.editor.filechooser.FileType


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
